{"version":3,"sources":["components/layout/Navbar.js","firebase.js","components/Home.js","components/Course.js","editor-tools.js","components/WriteFeedback.js","components/Note.js","components/WriteNote.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","state","handleItemClick","e","name","setState","activeItem","this","Menu","Item","active","onClick","as","Link","to","position","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Home","props","courses","notes","className","Header","Card","Group","map","course","key","id","fluid","color","header","description","Label","Detail","React","Course","useParams","filter","crs","courseNotes","note","courseId","Button","attached","EDITOR_JS_TOOLS","embed","Embed","table","Table","marker","Marker","list","List","warning","Warning","code","Code","linkTool","LinkTool","image","Image","raw","Raw","quote","Quote","checklist","CheckList","delimiter","Delimiter","inlineCode","InlineCode","simpleImage","SimpleImage","WriteFeedback","noteId","handleRate","rating","handleData","data","db","firestore","tools","onReady","console","log","onData","time","blocks","type","text","version","Rating","icon","size","defaultRating","maxRating","onRate","content","collection","add","then","docRef","catch","error","Note","level","WriteNote","match","params","get","querySnapshot","forEach","doc","push","length","App","basename","process","exact","path","render","component","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.092c65b0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Menu } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nexport class Navbar extends Component {\n  state = {};\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\n\n  render() {\n    const { activeItem } = this.state;\n\n    return (\n      <Menu>\n        <Menu.Item\n          name=\"mypage\"\n          active={activeItem === \"mypage\"}\n          onClick={this.handleItemClick}\n          as={Link}\n          to=\"/\"\n        >\n          My Page\n        </Menu.Item>\n        <Menu.Menu position=\"right\">\n          <Menu.Item\n            name=\"mypage\"\n            active={activeItem === \"mypage\"}\n            onClick={this.handleItemClick}\n          >\n            Sign In\n          </Menu.Item>\n        </Menu.Menu>\n      </Menu>\n    );\n  }\n}\n\nexport default Navbar;\n","import firebase from \"firebase\";\n\nconst config = {\n  apiKey: \"AIzaSyCt4eWmG4Ve_7873RBnOY38i0WeAuHP0wo\",\n  authDomain: \"cs473-conote.firebaseapp.com\",\n  databaseURL: \"https://cs473-conote.firebaseio.com\",\n  projectId: \"cs473-conote\",\n  storageBucket: \"cs473-conote.appspot.com\",\n  messagingSenderId: \"728656222999\",\n  appId: \"1:728656222999:web:d2a38aa32b4593c70cb552\",\n  measurementId: \"G-VZJTZTTK0Y\"\n};\nfirebase.initializeApp(config);\n\nexport default firebase;\n","import React from \"react\";\nimport { Button, Card, Header, Label } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"../firebase\";\n\nexport class Home extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    const courses = this.props.courses;\n    const notes = this.props.notes;\n    return (\n      <div className=\"courselist\">\n        <div className=\"Courses\">\n          <Header as=\"h1\">My Courses</Header>\n          <Card.Group>\n            {courses.map(course => (\n              <>\n                <Card\n                  key={course.id}\n                  as={Link}\n                  to={`/course/${course.id}`}\n                  fluid\n                  color=\"red\"\n                  header={`${course.name}`}\n                  description={\n                    <Label color=\"blue\">\n                      2019/11/20\n                      <Label.Detail>Notes updated</Label.Detail>\n                    </Label>\n                  }\n                ></Card>\n              </>\n            ))}\n          </Card.Group>\n        </div>\n        <div className=\"Notes\">\n          <Header as=\"h1\">My Notes</Header>\n          <Card.Group>\n            <Card\n              as={Link}\n              to=\"/note/1\"\n              fluid\n              color=\"red\"\n              header=\"Note A\"\n              description={\n                <Label color=\"orange\">\n                  2019/11/20\n                  <Label.Detail>Feedbacks received</Label.Detail>\n                </Label>\n              }\n            />\n            <Card as={Link} to=\"/note/2\" fluid color=\"orange\" header=\"Note B\" />\n            <Card as={Link} to=\"/note/3\" fluid color=\"yellow\" header=\"Note C\" />\n          </Card.Group>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Card, Button, Label } from \"semantic-ui-react\";\nimport firebase from \"../firebase\";\n\nexport function Course(props) {\n  // const [courses, setCourses] = useState(0);\n  const { id } = useParams();\n  const { courses, notes } = props;\n  const course = courses.filter(crs => {\n    return crs.id == id;\n  });\n  const courseNotes = notes.filter(note => {\n    return note.courseId === id;\n  });\n  return (\n    <div className=\"Courses\">\n      <h1>{course[0].name}</h1>\n      <Card.Group>\n        {courseNotes.map(note => (\n          <Card\n            as={Link}\n            to={`/note/${note.id}`}\n            fluid\n            color=\"red\"\n            header={`${note.name}`}\n            description={\n              <Label color=\"blue\">\n                2019/11/25\n                <Label.Detail>Student 1</Label.Detail>\n              </Label>\n            }\n          />\n        ))}\n      </Card.Group>\n      <Card fluid />\n      <Button as={Link} to={`/write/${id}`} attached=\"bottom\">\n        Write a note\n      </Button>\n    </div>\n  );\n}\n\nexport default Course;\n","import Embed from '@editorjs/embed'\nimport Table from '@editorjs/table'\nimport List from '@editorjs/list'\nimport Warning from '@editorjs/warning'\nimport Code from '@editorjs/code'\nimport LinkTool from '@editorjs/link'\nimport Image from '@editorjs/image'\nimport Raw from '@editorjs/raw'\nimport Header from '@editorjs/header'\nimport Quote from '@editorjs/quote'\nimport Marker from '@editorjs/marker'\nimport CheckList from '@editorjs/checklist'\nimport Delimiter from '@editorjs/delimiter'\nimport InlineCode from '@editorjs/inline-code'\nimport SimpleImage from '@editorjs/simple-image'\n\nexport const EDITOR_JS_TOOLS = {\n\tembed: Embed,\n\ttable: Table,\n\tmarker: Marker,\n\tlist: List,\n\twarning: Warning,\n\tcode: Code,\n\tlinkTool: LinkTool,\n\timage: Image,\n\traw: Raw,\n\theader: Header,\n\tquote: Quote,\n\tchecklist: CheckList,\n\tdelimiter: Delimiter,\n\tinlineCode: InlineCode,\n\tsimpleImage: SimpleImage,\n}\n","import React, { Component } from \"react\";\nimport Editor from \"@stfy/react-editor.js\";\nimport { EDITOR_JS_TOOLS } from \"../editor-tools\";\nimport { Button, Header, Rating } from \"semantic-ui-react\";\nimport firebase from \"../firebase\";\n\nexport class WriteFeedback extends Component {\n  state = {\n    noteId: this.props.id\n  };\n\n  handleRate = (e, { rating }) => this.setState({ rating });\n  handleData = data => this.setState({ data });\n  render() {\n    const db = firebase.firestore();\n    const data = this.state.data;\n    const noteId = this.state.noteId;\n    return (\n      <div className=\"Feedback\">\n        <Header as=\"h1\">Write a Feedback</Header>\n\n        <Editor\n          tools={EDITOR_JS_TOOLS}\n          onReady={() => console.log(\"Start Editor 2!\")}\n          onData={this.handleData}\n          data={{\n            time: 1569611146631,\n            blocks: [\n              {\n                type: \"paragraph\",\n                data: {\n                  text: \"Write here!\"\n                }\n              }\n            ],\n            version: \"2.15.0\"\n          }}\n        />\n        <Header as=\"h1\">Rate this note!</Header>\n        <Rating\n          icon=\"star\"\n          size=\"huge\"\n          defaultRating={3}\n          maxRating={5}\n          onRate={this.handleRate}\n        />\n        <div>\n          <Button\n            attached=\"bottom\"\n            content=\"Submit\"\n            onClick={() =>\n              db\n                .collection(\"feedbacks\")\n                .add({\n                  id: noteId,\n                  data: data,\n                  rating: this.state.rating\n                })\n                .then(function(docRef) {\n                  console.log(\"Document written with ID: \", docRef.id);\n                })\n                .catch(function(error) {\n                  console.error(\"Error adding document: \", error);\n                })\n            }\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WriteFeedback;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Editor from \"@stfy/react-editor.js\";\nimport { EDITOR_JS_TOOLS } from \"../editor-tools\";\nimport { WriteFeedback } from \"./WriteFeedback\";\nimport { Header } from \"semantic-ui-react\";\n\nexport function Note() {\n  let { id } = useParams();\n\n  return (\n    <div>\n      <div className=\"Note\">\n        <Header as=\"h1\">Student Note</Header>\n        <Editor\n          tools={EDITOR_JS_TOOLS}\n          data={{\n            time: 1569611146631,\n            blocks: [\n              {\n                type: \"header\",\n                data: {\n                  text: `Lecture ${id}`,\n                  level: 1\n                }\n              },\n              {\n                type: \"paragraph\",\n                data: {\n                  text: \"Write here!\"\n                }\n              },\n              {\n                type: \"header\",\n                data: {\n                  text: \"Insertion sort\",\n                  level: 3\n                }\n              },\n              {\n                type: \"paragraph\",\n                data: {\n                  text: \"Write here!\"\n                }\n              },\n              {\n                type: \"header\",\n                data: {\n                  text: \"Time Complexity\",\n                  level: 3\n                }\n              },\n              {\n                type: \"paragraph\",\n                data: {\n                  text: \"Write here!\"\n                }\n              }\n            ],\n            version: \"2.15.0\"\n          }}\n        />\n      </div>\n      <WriteFeedback id={id} />\n    </div>\n  );\n}\n\nexport default Note;\n","import React, { Component } from \"react\";\nimport Editor from \"@stfy/react-editor.js\";\nimport { EDITOR_JS_TOOLS } from \"../editor-tools\";\nimport { Button, Header, Rating } from \"semantic-ui-react\";\nimport firebase from \"../firebase\";\n\nexport class WriteNote extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      courseId: this.props.match.params.id,\n      notes: []\n    };\n  }\n  componentDidMount() {\n    const notes = [];\n    const db = firebase.firestore();\n    db.collection(\"notes\")\n      .get()\n      .then(querySnapshot => {\n        querySnapshot.forEach(function(doc) {\n          notes.push(doc.data());\n        });\n        this.setState({ notes: notes });\n      });\n  }\n\n  handleRate = (e, { rating }) => this.setState({ rating });\n  handleData = data => this.setState({ data });\n  render() {\n    const db = firebase.firestore();\n    const data = this.state.data;\n    const courseId = this.state.courseId;\n    const id = this.state.notes.length;\n    return (\n      <div className=\"\">\n        <Header as=\"h1\">Write a Note</Header>\n\n        <Editor\n          tools={EDITOR_JS_TOOLS}\n          onReady={() => console.log(\"Start Editor 1!\")}\n          onData={this.handleData}\n          data={{\n            time: 1569611146631,\n            blocks: [\n              {\n                type: \"header\",\n                data: {\n                  text: \"Note Title!\",\n                  level: 2\n                }\n              },\n              {\n                type: \"paragraph\",\n                data: {\n                  text: \"Write here!\"\n                }\n              }\n            ],\n            version: \"2.15.0\"\n          }}\n        />\n\n        <div>\n          <Button\n            attached=\"bottom\"\n            content=\"Submit\"\n            onClick={() =>\n              db\n                .collection(\"notes\")\n                .add({\n                  id: `${id + 1}`,\n                  courseId: courseId,\n                  name: data.blocks[0].data.text,\n                  data: data\n                })\n                .then(function(docRef) {\n                  console.log(\"Document written with ID: \", docRef.id);\n                })\n                .catch(function(error) {\n                  console.error(\"Error adding document: \", error);\n                })\n            }\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WriteNote;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Navbar } from \"./components/layout/Navbar\";\nimport { Home } from \"./components/Home\";\nimport { Course } from \"./components/Course\";\nimport { Note } from \"./components/Note\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { WriteNote } from \"./components/WriteNote\";\nimport firebase from \"./firebase\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      courses: [],\n      notes: []\n    };\n  }\n  componentDidMount() {\n    const courses = [];\n    const notes = [];\n    const db = firebase.firestore();\n    db.collection(\"courses\")\n      .get()\n      .then(querySnapshot => {\n        querySnapshot.forEach(function(doc) {\n          courses.push(doc.data());\n        });\n        this.setState({ courses: courses });\n      });\n    db.collection(\"notes\")\n      .get()\n      .then(querySnapshot => {\n        querySnapshot.forEach(function(doc) {\n          notes.push(doc.data());\n        });\n        this.setState({ notes: notes });\n      });\n  }\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <Navbar {...this.props} />\n        </div>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={props => <Home {...props} {...this.state} />}\n          />\n          <Route path=\"/course/:id\">\n            <Course {...this.state} />\n          </Route>\n          <Route path=\"/note/:id\">\n            <Note />\n          </Route>\n          <Route path=\"/write/:id\" component={WriteNote} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}